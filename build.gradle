/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'antlr'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // Assertion
    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    implementation group: 'org.assertj', name: 'assertj-core', version: '3.15.0'


    // Use Antlr4 to parse JsonPath
    antlr 'org.antlr:antlr4:4.7'

    // JSONProvider
    implementation 'com.google.code.gson:gson:2.8.6'
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20190722'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.3'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.3'

    // logger
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'



}

application {
    // Define the main class for the application.
    mainClassName = 'jp4js.App'
}

generateGrammarSource {
    outputDirectory = file("${project.projectDir}/src/main/java/jp4js/parser")
    arguments += ["-package", "jp4js.parser", "-visitor"]
}

run {
  standardInput = System.in
}

task grun(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = 'org.antlr.v4.runtime.misc.TestRig'
  standardInput = System.in
  standardOutput = System.out
}
